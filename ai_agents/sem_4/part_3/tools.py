import time
import logging

try:
    from ddgs import DDGS
except ImportError as e:
    raise ImportError(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É: pip install duckduckgo-search"
    ) from e

logger = logging.getLogger(__name__)


def web_search(query: str, max_results: int = 15, region: str = "ru-ru") -> str:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã."""
    logger.info(f"üîé –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤–µ–±-–ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '{query}'")
    try:
        with DDGS(timeout=60) as ddgs:
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –æ–±—Ö–æ–¥–∞ rate-limit
            time.sleep(3)
            results = list(ddgs.text(query, max_results=max_results, region=region))
        if not results:
            logger.warning(f"–ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}' –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            return "–ü–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."

        formatted_results = "\n---\n".join(
            [f"–†–µ–∑—É–ª—å—Ç–∞—Ç {i + 1}: {r}" for i, r in enumerate(results)]
        )
        logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ '{query}'")
        return formatted_results
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞: {e}"
        logger.error(error_msg)
        return error_msg
